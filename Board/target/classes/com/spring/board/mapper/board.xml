<?xml version="1.0" encoding="UTF-8"?>

<!-- ==== #29. mapper 기본설정 ==== -->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- ==== #29. 루트 엘리먼트 & 네임스페이스 설정(프로젝트 전체내에서 유일해야 한다.) ==== -->
<mapper namespace="board">

	<!-- xml파일은 was를 구동할 때 불러온다, 변경후에 재구동 필요 -->
	<!-- sql이 들어있는 xml파일을 mapper라 한다. -->

	<insert id="test_insert">	
		insert into spring_test(no, name, writeday)
		values(101, '최병진', default)
	</insert>
	
	<!--  !!!! 주의해야할 사항은 리턴타입이 List<E> 이더라도 resultType 은 E 으로 해야만 한다. !!!! -->
	<select id="test_select" resultType="com.spring.board.model.TestVO">
		select no, name, to_char(writeday, 'yyyy-mm-dd hh24:mi:ss') AS writeday
		from spring_test
		order by writeday desc
	</select>
	
	<!-- #### 중요 #### 
		HashMap 타입으로 매개변수를 받아온 것을 꺼내서 사용할때 
		1. 데이터로 사용할때는 #{key명} 이고,
		2. 식별자(테이블명, 컬럼명)로 사용할때는 ${key명} 이고,
		3. myBatis 에서 제공하는 if 엘리먼트나 choose 엘리먼트 안에서 사용할때는 
		그냥 <if test="key명"> <when test="key명"> 으로 사용한다. 
	-->	
	<insert id="test_insert_map" parameterType="HashMap">
		insert into spring_test(no, name, writeday)
		values(#{no}, #{name}, default)		
	</insert>
	
	<!-- === 파라미터로 VO가 들어오면 입력해줄때 값은 #{get다음에나오는 메소드명인데 첫글자는 반드시 소문자} 으로 해준다. -->
	<insert id="test_insert_vo" parameterType="com.spring.board.model.TestVO">
		insert into spring_test(no, name, writeday)
		values(#{no},#{name} , default)
	</insert>
	
	
	<!-- ====================================================================================== -->
	
	<!-- // === #39. 시작페이지에서 메인 이미지를 보여주는 것 === // -->
	<select id="getImgfilenameList" resultType="String">
		select imgfilename
		from tbl_main_image
		order by imgno desc
	</select>
	
	<!-- === #47. 로그인 처리하기 === -->
	<select id="getLoginMember" resultType="com.spring.board.model.MemberVO" parameterType="HashMap">
		SELECT userid, name, email, mobile, postcode, address, detailaddress, extraaddress, gender  
		     , birthyyyy, birthmm, birthdd, coin, point, registerday, pwdchangegap  
		     , nvl(lastlogingap, trunc( months_between(sysdate, registerday) ) ) AS lastlogingap 
		FROM 
		 ( 
		  select userid, name, email, mobile, postcode, address, detailaddress, extraaddress, gender
		        , substr(birthday,1,4) AS birthyyyy, substr(birthday,6,2) AS birthmm, substr(birthday,9) AS birthdd
		        , coin, point, to_char(registerday, 'yyyy-mm-dd') AS registerday
		        , trunc( months_between(sysdate, lastpwdchangedate) ) AS pwdchangegap
		  from tbl_member
		  where status = 1 and userid = #{userid} and pwd = #{pwd}
		 ) M 
		CROSS JOIN 
		(
		 select trunc( months_between(sysdate, max(logindate)) ) AS lastlogingap
		 from tbl_loginhistory
		 where fk_userid = #{userid}
		) H
	</select>
	<update id="updateIdle" parameterType="String">
		update tbl_member set idle = 1
		where userid = #{userid} <!-- dao의 userid -->
	</update>
	
	
	
	<!-- ==== #57. 글쓰기(파일첨부가 없는 글쓰기) ==== -->
	<insert id="add" parameterType="com.spring.board.model.BoardVO">
		insert into tbl_board(seq, fk_userid, name, subject, content, pw, readCount, regDate, status)
		values(boardSeq.nextval, #{fk_userid}, #{name}, #{subject}, #{content}, #{pw}, default, default, default)	
	</insert>
	
	
	<!--   ==== #61. 페이징 처리를 안한 검색어가 없는 전체 글목록 보여주기 ==== -->
	<select id="boardListNoSearch" resultType="com.spring.board.model.BoardVO">
		select seq, fk_userid, name, subject  
		     , readCount, to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate
		from tbl_board
		where status = 1
		order by seq desc
	</select>
	
	
	<!-- ==== #66. 글 1개 조회하기 ==== -->
	<select id="getView" parameterType="HashMap" resultType="com.spring.board.model.BoardVO">
		select previousseq, previoussubject
		     , seq, fk_userid, name, subject, content, readCount, regDate, pw
		     , nextseq, nextsubject
		from
		(
		select lag(seq,1) over(order by seq desc) AS previousseq
		     , lag(subject,1) over(order by seq desc) AS previoussubject       
		     , seq, fk_userid, name, subject, content, readCount 
		     , to_char(regDate, 'yyyy-mm-dd hh24:mi:ss') as regDate     
		     , pw
		     , lead(seq,1) over(order by seq desc) AS nextseq
		     , lead(subject,1) over(order by seq desc)  AS nextsubject
		from tbl_board
		where status = 1
		) V
		where V.seq = #{seq}
	</select>
	
	
	<!-- ==== #67. 글조회수 1증가하기 ==== -->
	<update id="setAddReadCount" parameterType="String">
		update tbl_board set readCount = readCount + 1
		where seq = #{seq}
	</update>
	
	
	<!-- ==== #75. 1개글 수정하기 ==== -->
	<update id="edit" parameterType="com.spring.board.model.BoardVO">
		update tbl_board set subject = #{subject} 
        		            ,content = #{content}
		where seq = #{seq} and pw = #{pw}
	</update>
	
	
	<!-- === #80. 1개글 삭제하기 === -->
	<delete id="del" parameterType="HashMap">
		delete from tbl_board
		where seq = #{seq}
	</delete>
</mapper>